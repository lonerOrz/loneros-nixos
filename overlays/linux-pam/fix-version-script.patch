diff --git a/modules/modules.map b/modules/modules.map
index 369b0479..dfefef02 100644
--- a/modules/modules.map
+++ b/modules/modules.map
@@ -6,5 +6,6 @@
     pam_sm_close_session;
     pam_sm_open_session;
     pam_sm_setcred;
+    pam_sm_canonicalize_user;
   local: *;
 };
diff --git a/modules/pam_canonicalize_user/pam_canonicalize_user.c b/modules/pam_canonicalize_user/pam_canonicalize_user.c
index e2ba89c0..679c6ff8 100644
--- a/modules/pam_canonicalize_user/pam_canonicalize_user.c
+++ b/modules/pam_canonicalize_user/pam_canonicalize_user.c
@@ -39,38 +39,61 @@
 #include <string.h>
 #include <syslog.h>
 
+#include <security/pam_ext.h>
 #include <security/pam_modules.h>
 #include <security/pam_modutil.h>
-#include <security/pam_ext.h>
 
-int
-pam_sm_authenticate(pam_handle_t *pamh UNUSED, int flags UNUSED,
-		    int argc UNUSED, const char **argv UNUSED)
-{
-	const char *user;
-	int rc = pam_get_user(pamh, &user, NULL);
-	if (rc != PAM_SUCCESS) {
-		pam_syslog(pamh, LOG_NOTICE, "cannot determine user name: %s",
-			   pam_strerror(pamh, rc));
-		return rc == PAM_CONV_AGAIN ? PAM_INCOMPLETE : rc;
-	}
+PAM_EXTERN int pam_sm_authenticate(pam_handle_t *pamh UNUSED, int flags UNUSED,
+                                   int argc UNUSED, const char **argv UNUSED) {
+  const char *user;
+  int rc = pam_get_user(pamh, &user, NULL);
+  if (rc != PAM_SUCCESS) {
+    pam_syslog(pamh, LOG_NOTICE, "cannot determine user name: %s",
+               pam_strerror(pamh, rc));
+    return rc == PAM_CONV_AGAIN ? PAM_INCOMPLETE : rc;
+  }
+
+  struct passwd *pw = pam_modutil_getpwnam(pamh, user);
+  if (!pw) {
+    pam_syslog(pamh, LOG_NOTICE, "user unknown");
+    return PAM_USER_UNKNOWN;
+  }
+
+  if (strcmp(user, pw->pw_name) == 0)
+    return PAM_IGNORE;
+
+  rc = pam_set_item(pamh, PAM_USER, pw->pw_name);
+  return rc == PAM_SUCCESS ? PAM_IGNORE : rc;
+}
+
+PAM_EXTERN int pam_sm_setcred(pam_handle_t *pamh UNUSED, int flags UNUSED,
+                              int argc UNUSED, const char **argv UNUSED) {
+  return PAM_IGNORE;
+}
+
+PAM_EXTERN int pam_sm_acct_mgmt(pam_handle_t *pamh UNUSED, int flags UNUSED,
+                                int argc UNUSED, const char **argv UNUSED) {
+  return PAM_SUCCESS;
+}
 
-	struct passwd *pw = pam_modutil_getpwnam(pamh, user);
-	if (!pw) {
-		pam_syslog(pamh, LOG_NOTICE, "user unknown");
-		return PAM_USER_UNKNOWN;
-	}
+PAM_EXTERN int pam_sm_chauthtok(pam_handle_t *pamh UNUSED, int flags UNUSED,
+                                int argc UNUSED, const char **argv UNUSED) {
+  return PAM_SUCCESS;
+}
 
-	if (strcmp(user, pw->pw_name) == 0)
-		return PAM_IGNORE;
+PAM_EXTERN int pam_sm_open_session(pam_handle_t *pamh UNUSED, int flags UNUSED,
+                                   int argc UNUSED, const char **argv UNUSED) {
+  return PAM_SUCCESS;
+}
 
-	rc = pam_set_item(pamh, PAM_USER, pw->pw_name);
-	return rc == PAM_SUCCESS ? PAM_IGNORE : rc;
+PAM_EXTERN int pam_sm_close_session(pam_handle_t *pamh UNUSED, int flags UNUSED,
+                                    int argc UNUSED, const char **argv UNUSED) {
+  return PAM_SUCCESS;
 }
 
-int
-pam_sm_setcred(pam_handle_t *pamh UNUSED, int flags UNUSED,
-	       int argc UNUSED, const char **argv UNUSED)
-{
-	return PAM_IGNORE;
+PAM_EXTERN int pam_sm_canonicalize_user(pam_handle_t *pamh UNUSED,
+                                        int flags UNUSED, int argc UNUSED,
+                                        const char **argv UNUSED,
+                                        const char **user UNUSED) {
+  return PAM_IGNORE;
 }
